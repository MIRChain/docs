"use strict";(self.webpackChunkmir_docs=self.webpackChunkmir_docs||[]).push([[684],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},m="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(h,i(i({ref:e},c),{},{components:n})):r.createElement(h,i({ref:e},c))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l[m]="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},724:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Connect to MIR manually",l={unversionedId:"tutorial-basics/connect-to-chain",id:"tutorial-basics/connect-to-chain",title:"Connect to MIR manually",description:"Prerequisites",source:"@site/docs/tutorial-basics/connect-to-chain.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/connect-to-chain",permalink:"/MIR/docs/tutorial-basics/connect-to-chain",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/MIR/docs/category/basics"}},p={},s=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"How to build?",id:"how-to-build",level:3},{value:"How to connect to public nets?",id:"how-to-connect-to-public-nets",level:3},{value:"How to start mining manually through CLI?",id:"how-to-start-mining-manually-through-cli",level:3}],c={toc:s},m="wrapper";function u(t){let{components:e,...n}=t;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"connect-to-mir-manually"},"Connect to MIR manually"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Linux"),(0,a.kt)("li",{parentName:"ol"},"Go 1.20"),(0,a.kt)("li",{parentName:"ol"},"Tmux"),(0,a.kt)("li",{parentName:"ol"},"Git")),(0,a.kt)("h3",{id:"how-to-build"},"How to build?"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone repo")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/MIRChain/MIR.git\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Compile biniries")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make all\n")),(0,a.kt)("p",null,"Builded biniries is stored at ",(0,a.kt)("inlineCode",{parentName:"p"},"MIR/build/bin")),(0,a.kt)("h3",{id:"how-to-connect-to-public-nets"},"How to connect to public nets?"),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"mir")," with following flags to connect to GOST testnet/mainnets"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"for testnet:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'./mir --crypto gost \\\n   --gostcurve id-GostR3410-2001-CryptoPro-A-ParamSet \\\n   --datadir node1 \\\n   --identity [your_identity] \\\n   --syncmode full \\\n   --gcmode=archive \\\n   --port 30312 \\\n   --soyuz \\\n   --ethstats node1:soyuz@194.87.80.101:3000 \\\n   --ws \\\n   --ws.addr 0.0.0.0 \\\n   --ws.port 8546 \\\n   --ws.origins "*" \\\n   --http \\\n   --http.addr 0.0.0.0 \\\n   --http.port 8545 \\\n   --http.corsdomain "*" \\\n   --http.api personal,eth,net,web3,txpool,miner,admin \\\n   --verbosity 4\n')),(0,a.kt)("p",{parentName:"li"}," Node monitoring of tesetnet:"),(0,a.kt)("p",{parentName:"li"}," ",(0,a.kt)("a",{parentName:"p",href:"http://194.87.80.101:3000"},"http://194.87.80.101:3000"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"for mainnet:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'./mir --crypto gost \\\n   --gostcurve id-GostR3410-2001-CryptoPro-A-ParamSet \\\n   --datadir node1 \\\n   --identity [your_identity] \\\n   --syncmode full \\\n   --gcmode=archive \\\n   --port 30312 \\\n   --mainnet \\\n   --ethstats node1:buran@194.87.253.126:3000 \\\n   --ws \\\n   --ws.addr 0.0.0.0 \\\n   --ws.port 8546 \\\n   --ws.origins "*" \\\n   --http \\\n   --http.addr 0.0.0.0 \\\n   --http.port 8545 \\\n   --http.corsdomain "*" \\\n   --http.api personal,eth,net,web3,txpool,miner,admin \\\n   --verbosity 4\n')))),(0,a.kt)("p",null,"Node monitoring of mainnet:"),(0,a.kt)("p",null,"  ",(0,a.kt)("a",{parentName:"p",href:"http://194.87.253.126:3000"},"http://194.87.253.126:3000")),(0,a.kt)("h3",{id:"how-to-start-mining-manually-through-cli"},"How to start mining manually through CLI?"),(0,a.kt)("p",null,"Bins are stored here ",(0,a.kt)("inlineCode",{parentName:"p"},"MIR/build/bin")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a GOST Ethereum account"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./mir --crypto gost account new --datadir node1\n")),(0,a.kt)("p",{parentName:"li"}," ",(0,a.kt)("strong",{parentName:"p"},"Important:remember the passwors !!!"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"mir")," with flags ",(0,a.kt)("inlineCode",{parentName:"p"},"  --mine --miner.threads=6")),(0,a.kt)("p",{parentName:"li"}," ",(0,a.kt)("inlineCode",{parentName:"p"},"--miner.threads")," number of CPU threads for mining"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'./mir --crypto gost \\\n   --gostcurve id-GostR3410-2001-CryptoPro-A-ParamSet \\\n   --datadir node1 \\\n   --identity [your_identity] \\\n   --syncmode full \\\n   --gcmode=archive \\\n   --port 30312 \\\n   --soyuz \\\n   --ethstats node1:soyuz@194.87.80.101:3000 \\\n   --mine \\\n   --miner.threads=4 \\\n   --ws \\\n   --ws.addr 0.0.0.0 \\\n   --ws.port 8546 \\\n   --ws.origins "*" \\\n   --http \\\n   --http.addr 0.0.0.0 \\\n   --http.port 8545 \\\n   --http.corsdomain "*" \\\n   --http.api personal,eth,net,web3,txpool,miner,admin \\\n   --verbosity 4\n')))))}u.isMDXComponent=!0}}]);